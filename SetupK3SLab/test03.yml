#!/usr/bin/env ansible-playbook
# ansible-galaxy collection install community.vmware
---
- hosts: localhost
  gather_facts: true
  vars:
    root_passwd: "Today123!"
    vcenter_hostname: "esx.lab.linder.org"
    esxi_hostname: "{{ vcenter_hostname }}"
    vcenter_username: "root"
    vcenter_password: "1234NewS!@#$"
    vminfo:
    - name: "services"
      guest_id: "rhel8_64Guest"
      kickstart_template: "services.ks.j2"
      kickstart_file: "services.ks"
      iso: "[datastore1] isos/CentOS-8.2.2004-x86_64-dvd1.iso"
      iso_label: "CentOS-8-2-2004-x86_64-dvd"
      boot_string: "vmlinuz initrd=initrd.img inst.stage2=hd:LABEL=CentOS-8-2-2004-x86_64-dvd inst.ks=http://_HTTPD_IP_:_HTTPD_PORT_/services.ks"
      defgw: "192.168.65.1"
      dns: "192.168.65.7"
      nics:
      - nicname: "VM Network"
        mac: "00:50:56:01:01:10"
        address: "192.168.65.140"
        netmask: "255.255.255.0"
      - nicname: "OKD"
        mac: "00:50:56:01:01:10"
        address: "192.168.1.210"
        netmask: "255.255.255.0"
      CPUs: 4
      RAM: 4096
      HDD:
        size: 100
        datastore: "datastore1"

    vminfo2:
    - name: "pfsense"
      guest_id: "rhel8_64Guest"
      iso: "isos/CentOS-8.2.2004-x86_64-dvd1.iso"
      nics:
      - nicname: "Lab Network"
        mac: "00:50:56:01:01:10"
        address: "192.168.65.141"
        netmask: "255.255.255.0"
      - nicname: "OKD"
        mac: "00:50:56:01:01:10"
        address: "192.168.1.1"
        netmask: "255.255.255.0"
      CPUs: 1
      RAM: 1024
      HDD:
        size: 8
        datastore: "/datastore1"

    - name: "bootstrap"
      guest_id: "rhel8_64Guest"
      iso: "isos/CentOS-8.2.2004-x86_64-dvd1.iso"
      nics:
      - nicname: "OKD"
        mac: "00:50:56:01:01:10"
        address: "192.168.1.200"
        netmask: "255.255.255.0"
      CPUs: 4
      RAM: 16384
      HDD:
        size: 120
        datastore: "/datastore1"

    - name: "control-plane-1"
      guest_id: "rhel8_64Guest"
      iso: "isos/CentOS-8.2.2004-x86_64-dvd1.iso"
      nics:
      - nicname: "OKD"
        mac: "00:50:56:01:01:10"
        address: "192.168.1.201"
        netmask: "255.255.255.0"
      CPUs: 4
      RAM: 16384
      HDD:
        size: 120
        datastore: "/datastore1"

    - name: "control-plane-2"
      guest_id: "rhel8_64Guest"
      iso: "isos/CentOS-8.2.2004-x86_64-dvd1.iso"
      nics:
      - nicname: "OKD"
        mac: "00:50:56:01:01:10"
        address: "192.168.1.202"
        netmask: "255.255.255.0"
      CPUs: 4
      RAM: 16384
      HDD:
        size: 120
        datastore: "/datastore1"

    - name: "control-plane-3"
      guest_id: "rhel8_64Guest"
      iso: "isos/CentOS-8.2.2004-x86_64-dvd1.iso"
      nics:
      - nicname: "OKD"
        mac: "00:50:56:01:01:10"
        address: "192.168.1.203"
        netmask: "255.255.255.0"
      CPUs: 4
      RAM: 16384
      HDD:
        size: 120
        datastore: "/datastore1"

    - name: "compute-1"
      guest_id: "rhel8_64Guest"
      iso: "isos/CentOS-8.2.2004-x86_64-dvd1.iso"
      nics:
      - nicname: "OKD"
        mac: "00:50:56:01:01:10"
        address: "192.168.1.204"
        netmask: "255.255.255.0"
      CPUs: 4
      RAM: 16384
      HDD:
        size: 120
        datastore: "/datastore1"

    - name: "compute-2"
      guest_id: "rhel8_64Guest"
      iso: "isos/CentOS-8.2.2004-x86_64-dvd1.iso"
      nics:
      - nicname: "OKD"
        mac: "00:50:56:01:01:10"
        address: "192.168.1.205"
        netmask: "255.255.255.0"
      CPUs: 4
      RAM: 16384
      HDD:
        size: 120
        datastore: "/datastore1"

  tasks:
  - name: "Bring in HTTPD server info"
    set_fact:
      httpd_ip: "{{ ansible_facts.default_ipv4.address }}"
      httpd_port: 80

  - name: "Build VM objects"
    community.vmware.vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: no
      folder: /
      name: "{{ item.name }}"
      state: poweredon
      guest_id: "{{ item.guest_id }}"
      esxi_hostname: "{{ esxi_hostname }}"
      cdrom:
      - type: iso
        state: present
        iso_path: "{{ item.iso }}"
        controller_number: 0
        unit_number: 0
      disk:
      - size_gb: "{{ item.HDD.size }}"
        type: thin
        datastore: "{{ item.HDD.datastore }}"
      hardware:
        memory_mb: "{{ item.RAM }}"
        num_cpus: "{{ item.CPUs }}"
        scsi: paravirtual
        boot_firmware: "bios"
      networks:
      - name: "{{ item.nics[0].nicname }}"
        mac: "{{ item.nics[0].mac }}"
        ip: "{{ item.nics[0].address }}"
        netmask: "{{ item.nics[0].netmask }}"
        device_type: vmxnet3
      - name: "{{ item.nics[1].nicname | default(omit) }}"
        mac: "{{ item.nics[1].mac | default(omit) }}"
        ip: "{{ item.nics[1].address | default(omit) }}"
        netmask: "{{ item.nics[1].netmask | default(omit) }}"
        device_type: vmxnet3
      wait_for_ip_address: no
    #delegate_to: localhost
    register: deploy_vm
    loop: "{{ vminfo }}"
    loop_control:
      label: "{{ item.name }}"

  - name: "Setup kickstart files"
    template:
      src: "./templates/{{ item.kickstart_template }}"
      dest: "/var/www/html/{{ item.kickstart_file }}"
      owner: apache
      group: apache
      mode: '0644'
    become: true
    loop: '{{ vminfo }}'
    loop_control:
      label: "{{ item.name }}"

  - name: "Send boot configuration"
    community.vmware.vmware_guest_sendkey:
      validate_certs: no
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      name: "{{ item.name }}"
      keys_send:
        - ESC
        - ESC
      string_send: "{{ item.boot_string | replace('_HTTPD_IP_',httpd_ip) | replace('_HTTPD_PORT_',httpd_port) }}"
    loop: '{{ vminfo }}'
    loop_control:
      label: "{{ item.name }}"

  - name: "Start boot from ISO"
    community.vmware.vmware_guest_sendkey:
      validate_certs: no
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      name: "{{ item.name }}"
      keys_send:
        - ENTER
    loop: '{{ vminfo }}'
    loop_control:
      label: "{{ item.name }}"

  - name: "Wait for SSH to come up"
    wait_for:
      port: 22
      host: '{{ item.nics[0].address }}'
      #delay: 10
      timeout: 900
    connection: local
    loop: '{{ vminfo }}'
    loop_control:
      label: "{{ item.name }}"

  - name: "Add new hosts"
    add_host:
      name: "{{ item.name }}"
      ansible_host: "{{ item.nics[0].address }}"
      ansible_user: root
      ansible_password: "{{ root_passwd }}"
      groups: newvms
    loop: '{{ vminfo }}'
    loop_control:
      label: "{{ item.name }}"

- hosts: newvms
  gather_facts: true
  remote_user: vagrant

  tasks:
  - name: "Ping new hosts"
    ping:
